@page "/tags"
@page "/tags/{Keyword}"

@inject IJSRuntime IJS
<main class="col col-xl-6 order-xl-2 col-lg-12 order-lg-1 col-md-12 col-sm-12 col-12">
    <div class="main-content">
        <div class="d-flex align-items-center mb-4">
            <a href="explore" class="material-icons text-dark text-decoration-none m-none me-3">arrow_back</a>
            <p class="ms-2 mb-0 fw-bold text-body fs-6">#Trending</p>
        </div>
        <!-- Feeds -->
        <ListPostPage Keyword="@Keyword" FeedType="ListPostPage.FeedTypes.Trending" @ref="ListPostPageRef2" UserName="@Username"></ListPostPage>
    </div>
    @if (IsLoading)
    {
        <div class="text-center mt-4">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mb-0 mt-2">Loading</p>
        </div>
    }
</main>


@code {
    [Parameter]
    public string Keyword { get; set; }
    bool IsLoading { get; set; } = false;

    ListPostPage ListPostPageRef2;

    static Action _action;
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    public Post NewPost { get; set; } = new();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string Username;
    string OldKeyword;
    protected override async Task OnInitializedAsync()
    {
        _action = RefreshData;
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            Username = user.Identity.Name;
        }
        Layout.NewPost = NewPost;
    }
    private void RefreshData()
    {
        if(ListPostPageRef2!=null)
            ListPostPageRef2.Refresh();
    }

    [JSInvokable("RefreshAll2")]
    public static void RefreshAll2()
    {
        _action.Invoke();
    }
    async Task OpenNewPost()
    {
        //data-bs-toggle="modal" data-bs-target="#postModal"
        NewPost.Message = string.Empty;
        NewPost.Id = 0;
        NewPost.ImageUrls = string.Empty;
        NewPost.DocUrls = string.Empty;
        NewPost.VideoUrls = string.Empty;

        IJS.InvokeVoidAsync("ShowModal", "postModal");
    }



    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            IJS.InvokeVoidAsync("InitJs");
        }
    }


    protected override void OnParametersSet()
    {
        if (Keyword != OldKeyword)
        {
            RefreshData();
        }
        OldKeyword = Keyword;
    }
}
