@using Sedulur.Data
@using Sedulur.Tools
@inject IJSRuntime IJS

@inject IToastService toastService
<div class="modal fade" id="forgetModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 p-4 border-0">
            <div class="modal-header border-0 p-1">
                <h6 class="modal-title fw-bold text-body fs-6" id="exampleModalLabel">Lupa Password</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form>
                <div class="modal-body p-0">

                    <div class="mt-5 login-register" id="number">
                        @*    <h6 class="fw-bold mx-1 mb-2 text-dark">Register User Baru</h6>*@
                        
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="email" @bind="Email" class="form-control rounded-5" id="floatingName" placeholder="Isi Email">
                                    <label for="floatingName">Isi Email</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="text" @bind="Phone" class="form-control rounded-5" id="floatingName" placeholder="Isi No Hp">
                                    <label for="floatingName">Isi No Hp</label>
                                </div>
                            </div>
                        </div>
                        

                        <div class="p-1">
                            <button type="button" @onclick="KirimPassword" class="btn btn-primary w-100 text-decoration-none rounded-5 py-3 fw-bold text-uppercase m-0 mb-1">Kirim</button>
                            <button type="button" @onclick="Tutup" class="btn btn-success w-100 text-decoration-none rounded-5 py-3 fw-bold text-uppercase m-0" data-bs-dismiss="modal">Tutup</button>

                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    public string Phone { get; set; }
    public string Email { get; set; }
    async Task Tutup()
    {
        await IJS.InvokeVoidAsync("CloseModal", "forgetModal");
    }
    async Task KirimPassword()
    {
        bool IsSuccess = false;
        UserProfileService svc = new UserProfileService();
        var enc = new Encryption();
        string Error = string.Empty;

        if (string.IsNullOrEmpty(Email) && string.IsNullOrEmpty(Phone))
        {
            toastService.ShowError("Email atau no hp harus di isi.");
            return;
        }
        if (!string.IsNullOrEmpty(Email))
        {
            var item = svc.GetItemByEmail(Email);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);
                await MailService.PostmarkSendEmail("Portal-UB - Forget Password", $"Password Anda adalah {pass}", Email, false);
                toastService.ShowSuccess("Info password sudah di kirim ke email Anda");
                IsSuccess = true;
            }
            else
            {
                toastService.ShowError("Email tidak terdaftar.");
            }
        }

        if (!string.IsNullOrEmpty(Phone))
        {
            var item = svc.GetItemByPhone(Phone);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);

                await SmsService.SendSms($"[Portal-UB] -> Password Anda adalah {pass}", item.Phone);
                toastService.ShowSuccess("Info password sudah di kirim ke hp Anda");
                IsSuccess = true;

            }
            else
            {
                toastService.ShowError("No HP tidak terdaftar.");
            }
        }

        if(IsSuccess)
            await IJS.InvokeVoidAsync("CloseModal", "forgetModal");
    }
}
