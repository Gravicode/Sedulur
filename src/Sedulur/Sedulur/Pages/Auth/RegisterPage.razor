@using Sedulur.Helpers
@using Sedulur.Models
@using Sedulur.Data
@inject NavigationManager NavMgr
@*@page "/auth/register"*@
@inject IJSRuntime IJS

@inject IToastService toastService
@using Sedulur.Tools

<div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 p-4 border-0">
            <div class="modal-header border-0 p-1">
                <h6 class="modal-title fw-bold text-body fs-6" id="exampleModalLabel">Register User Baru</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form>
                <div class="modal-body p-0">

                    <div class="mt-5 login-register" id="number">
                    @*    <h6 class="fw-bold mx-1 mb-2 text-dark">Register User Baru</h6>*@
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="text" @bind="DataUser.FullName" class="form-control rounded-5" id="floatingName" placeholder="Isi Nama Lengkap">
                                    <label for="floatingName">Isi Nama Lengkap</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="email" @bind="DataUser.Email" class="form-control rounded-5" id="floatingEmail" placeholder="Isi Email">
                                    <label for="floatingEmail">Isi Email</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="text" @bind="DataUser.Phone" class="form-control rounded-5" id="floatingHp" placeholder="Isi No Hp">
                                    <label for="floatingHp">Isi No Hp</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="text" @bind="DataUser.Username" class="form-control rounded-5" id="floatingUserName" placeholder="Isi Username">
                                    <label for="floatingUserName">Isi Username</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <select @bind="DataUser.Pekerjaan" class="form-control rounded-5" id="floatingJob" aria-label="Pilih Pekerjaan">
                                        @foreach(var item in AppConstants.DaftarProfesi.OrderBy(x=>x))
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    </select>
                                    <label for="floatingJob">Pilih Pekerjaan</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="text" @bind="DataUser.Alamat" class="form-control rounded-5" id="floatingAddress" placeholder="Isi Alamat">
                                    <label for="floatingAddress">Isi Alamat</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="password" @bind="DataUser.Password" class="form-control rounded-5" id="floatingPass" placeholder="Isi Password">
                                    <label for="floatingPass">Isi Password</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <input type="password" @bind="RetypePass" class="form-control rounded-5" id="floatingPass2" placeholder="Ulang Password">
                                    <label for="floatingPass2">Ulang Password</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                    <img src="@CaptchaImage" style="text-align:center;margin-bottom:5px;mr-1">   
                                    <button @onclick="GenerateCaptcha" class="btn btn-success mb-1">Ganti</button>
                                </div>
                            </div>
                        </div>
                        <div class="row mx-0 mb-1">
                            <div class="col-12 p-1">
                                <div class="form-floating d-flex align-items-end">
                                   
                                    <input @bind="TypedCaptcha" type="text" class="form-control rounded-5" id="floatingCaptcha" placeholder="ketik captcha" required>
                                    <label for="floatingCaptcha">Ketik Captcha</label>
                                </div>
                            </div>
                        </div>

                        <div class="p-1">
                            <button type="button" @onclick="DaftarUser" class="btn btn-primary w-100 text-decoration-none rounded-5 py-3 fw-bold text-uppercase m-0 mb-1">Daftar</button>
                            <button type="button" @onclick="Kembali" class="btn btn-success w-100 text-decoration-none rounded-5 py-3 fw-bold text-uppercase m-0" data-bs-dismiss="modal">Batal</button>

                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }

    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string KodePengurus;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        var temp = CaptchaGenerator.GetCaptcha(Answer, 158, 70);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }
    async Task Kembali()
    {
        await IJS.InvokeVoidAsync("CloseModal", "registerModal");
        //NavMgr.NavigateTo("/auth/login");
    }
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();
    }
    async Task DaftarUser()
    {
        bool isPengurus = false;
        ErrorMsg = "";
        UserProfileService svc = new UserProfileService();
        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg += "Tolong isi Captcha. ";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg += "Captcha tidak valid. ";
        }
        if (string.IsNullOrEmpty(DataUser.Username))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!Sedulur.Tools.FormValidation.IsValidEmail(DataUser.Email))
        {
            ErrorMsg += "Format email tidak valid. ";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FullName))
        {
            ErrorMsg += "Tolong di isi nama lengkap. ";

        }
        if (string.IsNullOrEmpty(DataUser.Alamat))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }
        if (svc.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }


        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }
        var enc = new Encryption();
        DataUser.Role = isPengurus ? Roles.Pengurus : Roles.User;
        DataUser.Password = enc.Encrypt(DataUser.Password);
        DataUser.CreatedDate = DateHelper.GetLocalTimeNow();
        if (svc.InsertData(DataUser))
        {
            var msg = "Anda telah terdaftar di sedulur, nuhun";
            await SmsService.SendSms(msg, DataUser.Phone);
            await MailService.PostmarkSendEmail("Telah Teregister di sedulur", msg, DataUser.Email);
            RegisterSuccess = true;
            StateHasChanged();
            await IJS.InvokeVoidAsync("CloseModal", "registerModal");
            toastService.ShowSuccess("User berhasil di daftarkan.","Info");
        }
    }
}
