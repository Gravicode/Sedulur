@inject FollowService FollowSvc
@inject UserProfileService UserSvc
<div class="bg-white rounded-4 overflow-hidden shadow-sm account-follow mb-4">
    <h6 class="fw-bold text-body p-3 mb-0 border-bottom">Who to follow</h6>
    @if (ListFollow != null)
    {
        @foreach (var usr in ListFollow)
        {

            <!-- Account Item -->
            <a href='@($"profile/{usr.User.Username}")' class="p-3 border-bottom d-flex text-dark text-decoration-none account-item">
                <img src="@(string.IsNullOrEmpty(usr.User.PicUrl)?"img/img-user.jpg":usr.User.PicUrl)" class="img-fluid rounded-circle me-3" alt="profile-img">
                <div>
                    <p class="fw-bold mb-0 pe-3 d-flex align-items-center">
                        @usr.User.FullName
                        @if (usr.User.IsBlueBadge)
                        {
                            <span class="ms-2 material-icons bg-primary p-0 md-16 fw-bold text-white rounded-circle ov-icon">done</span>
                        }
                    </p>
                    <div class="text-muted fw-light">
                        <p class="mb-1 small">
                            @(
                                $"@{usr.User.Username}"
                                )
                        </p>
                        <span class="text-muted d-flex align-items-center small">@usr.User.Pekerjaan</span>
                    </div>
                </div>
                @if (selUser != null)
                {
                    <div class="ms-auto">
                        <div class="btn-group" role="group" aria-label="Basic checkbox toggle button group">
                            <input type="checkbox" class="btn-check" id="btncheck9">
                            <label @onclick="(()=>ToggleFollow(usr))" class="btn btn-outline-primary btn-sm px-3 rounded-pill" >

                                @if (usr.IsFollow)
                                {
                                    <span class="following">Following</span>
                                }
                                else
                                {
                                    <span class="follow">+ Follow</span>
                                }
                            </label>
                        </div>
                    </div>
                }
            </a>
        }

    }

</div>
@code {



    [Parameter]
    public string Username { get; set; }
    //public List<UserProfile> ListUser { get; set; }
    public List<TempFollow> ListFollow { get; set; }
    UserProfile selUser;
    protected override async Task OnInitializedAsync()
    {

        var ListUser = FollowSvc.GetRandomPeople(Username);
        ListFollow = new();
        selUser = UserSvc.GetItemByUsername(Username);
        if (ListUser != null)
        {
            foreach (var item in ListUser)
            {
                ListFollow.Add(new TempFollow() { IsFollow = false, User = item });
            }
        }

    }

    async Task ToggleFollow(TempFollow temp)
    {
        temp.IsFollow = !temp.IsFollow;
        if (temp.IsFollow)
        {
            FollowSvc.FollowUser(selUser.Username, selUser.Id, temp.User.Username, temp.User.Id);
        }
        else
        {
            FollowSvc.UnFollowUser(selUser.Id, temp.User.Id);
        }
    }

}
