@inject FollowService FollowSvc
@inject UserProfileService UserSvc

<h6 class="mb-3 fw-bold text-body">People you can follow</h6>
<div class="bg-white rounded-4 overflow-hidden mb-4 shadow-sm">
    <!-- Account Item -->
    @if (ListRandomPeople != null)
    {
        foreach (var people in ListRandomPeople)
        {
            <a href="@($"profile/{people.Username}")" class="p-3 border-bottom d-flex text-dark text-decoration-none account-item pf-item">
                <img src="@(string.IsNullOrEmpty(people.PicUrl)?"img/img-user.jpg":people.PicUrl)" class="img-fluid rounded-circle me-3" alt="profile-img">
                <div>

                    <p class="fw-bold mb-0 pe-3 d-flex align-items-center">
                        @people.FullName
                        @if (people.IsBlueBadge)
                        {
                            <span class="ms-2 material-icons bg-primary p-0 md-16 fw-bold text-white rounded-circle ov-icon">done</span>
                        }
                    </p>

                    <div>
                        <p class="fw-light text-muted mb-1 small">@($"@{people.Username}")</p>
                        <span class="d-flex align-items-center small">@people.Pekerjaan</span>
                    </div>
                </div>
                <div class="ms-auto">
                    @if (selUser != null)
                    {
                        <span @onclick="(()=>ToggleFollow(people))" class="btn btn-outline-primary btn-sm px-3 rounded-pill">
                            @if (ListFollow[people.Username])
                            {
                                <span class="following">Following</span>
                            }
                            else
                            {
                                <span class="follow">+ Follow</span>
                            }
                        </span>
                    }
                </div>
            </a>
        }
    }

</div>
<h6 class="mb-3 fw-bold text-body">Popular</h6>
<div class="bg-white rounded-4 overflow-hidden mb-4 shadow-sm">
    <!-- Account Item -->
    @if (ListPopularPeople != null)
    {
        foreach (var people in ListPopularPeople)
        {
            <a href="@($"profile/{people.Username}")" class="p-3 border-bottom d-flex text-dark text-decoration-none account-item pf-item">
                <img src="@(string.IsNullOrEmpty(people.User.PicUrl)?"img/img-user.jpg":people.User.PicUrl)" class="img-fluid rounded-circle me-3" alt="profile-img">
                <div>

                    <p class="fw-bold mb-0 pe-3 d-flex align-items-center">
                        @people.User.FullName
                        @if (people.User.IsBlueBadge)
                        {
                            <span class="ms-2 material-icons bg-primary p-0 md-16 fw-bold text-white rounded-circle ov-icon">done</span>
                        }

                    </p>
                    <div>
                        <p class="fw-light text-muted mb-1 small">@($"@{people.User.Username}")</p>
                        <span class="d-flex align-items-center small">@people.User.Pekerjaan</span>
                    </div>
                </div>
                <div class="ms-auto">
                    @if (selUser != null)
                    {
                        <span @onclick="(()=>ToggleFollow(people.User))" class="btn btn-outline-primary btn-sm px-3 rounded-pill">
                            @if (ListFollow[people.Username])
                            {
                                <span class="following">Following</span>
                            }
                            else
                            {
                                <span class="follow">+ Follow</span>
                            }
                        </span>
                    }

                </div>
            </a>


        }
    }
</div>
@if (ListByJob != null)
{
    @foreach (var job in ListByJob)
    {
        <h6 class="mb-3 fw-bold text-body">@job.Job</h6>
        <div class="bg-white rounded-4 overflow-hidden mb-4 shadow-sm">
            @foreach (var people in job.Users)
            {
                <!-- Account Item -->
                <a href="@($"profile/{people.Username}")" class="p-3 border-bottom d-flex text-dark text-decoration-none account-item pf-item">
                    <img src="@(string.IsNullOrEmpty(people.PicUrl)?"img/img-user.jpg":people.PicUrl)" class="img-fluid rounded-circle me-3" alt="profile-img">
                    <div>
                        <p class="fw-bold mb-0 pe-3 d-flex align-items-center">
                            @people.FullName
                            @if (people.IsBlueBadge)
                            {
                                <span class="ms-2 material-icons bg-primary p-0 md-16 fw-bold text-white rounded-circle ov-icon">done</span>
                            }
                        </p>
                        <div>
                            <p class="fw-light text-muted mb-1 small">@($"@{people.Username}")</p>
                            <span class="d-flex align-items-center small">@people.Pekerjaan</span>
                        </div>
                    </div>
                    <div class="ms-auto">
                        @if (selUser != null)
                        {
                            <span @onclick="(()=>ToggleFollow(people))" class="btn btn-outline-primary btn-sm px-3 rounded-pill">
                                @if (ListFollow[people.Username])
                                {
                                    <span class="following">Following</span>
                                }
                                else
                                {
                                    <span class="follow">+ Follow</span>
                                }
                            </span>
                        }

                    </div>
                </a>


            }

        </div>

    }


}
@code {
    [Parameter]
    public string UserName { get; set; }

    public List<UserProfile> ListRandomPeople { get; set; }
    public List<PopularPeople> ListPopularPeople { get; set; }
    public List<PeopleByJob> ListByJob { get; set; }
    UserProfile selUser;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string Username;
    Dictionary<string, bool> ListFollow = new();
    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            Username = user.Identity.Name;
            selUser = UserSvc.GetItemByUsername(Username);
        }
        ListByJob = FollowSvc.GetPeopleByJob(Username);
        ListRandomPeople = FollowSvc.GetRandomPeople(Username, 5);
        ListPopularPeople = FollowSvc.GetPopularPeople(Username);
        //add to follow list
        if (ListByJob != null)
            ListByJob.ForEach(x =>
            {
                x.Users.ForEach(y =>
                {
                    if (!ListFollow.ContainsKey(y.Username))
                        ListFollow.Add(y.Username, false);
                });
            });
        if (ListRandomPeople != null)
            ListRandomPeople.ForEach(y =>
             {
                 if (!ListFollow.ContainsKey(y.Username))
                     ListFollow.Add(y.Username, false);
             });
        if (ListPopularPeople != null)
            ListPopularPeople.ForEach(y =>
             {
                 if (!ListFollow.ContainsKey(y.Username))
                     ListFollow.Add(y.Username, false);
             });
    }
    async Task ToggleFollow(UserProfile profile)
    {
        ListFollow[profile.Username] = !ListFollow[profile.Username];
        if (ListFollow[profile.Username])
        {
            FollowSvc.FollowUser(selUser.Username, selUser.Id, profile.Username, profile.Id);
        }
        else
        {
            FollowSvc.UnFollowUser(selUser.Id, profile.Id);
        }
    }

}
